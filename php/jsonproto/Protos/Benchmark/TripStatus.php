<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: benchmark.proto

namespace Benchmark;

use UnexpectedValueException;

/**
 * Protobuf type <code>benchmark.TripStatus</code>
 */
class TripStatus
{
    /**
     * Generated from protobuf enum <code>CREATED = 0;</code>
     */
    const CREATED = 0;
    /**
     * Generated from protobuf enum <code>PLANNING = 1;</code>
     */
    const PLANNING = 1;
    /**
     * Generated from protobuf enum <code>PLANNED = 2;</code>
     */
    const PLANNED = 2;
    /**
     * Generated from protobuf enum <code>IN_PROGRESS = 3;</code>
     */
    const IN_PROGRESS = 3;
    /**
     * Generated from protobuf enum <code>COMPLETED = 4;</code>
     */
    const COMPLETED = 4;
    /**
     * Generated from protobuf enum <code>CANCELLED = 5;</code>
     */
    const CANCELLED = 5;

    private static $valueToName = [
        self::CREATED => 'CREATED',
        self::PLANNING => 'PLANNING',
        self::PLANNED => 'PLANNED',
        self::IN_PROGRESS => 'IN_PROGRESS',
        self::COMPLETED => 'COMPLETED',
        self::CANCELLED => 'CANCELLED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

